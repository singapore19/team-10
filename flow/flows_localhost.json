[{"id":"5db46688.6c18e8","type":"tab","label":"Flow 1","disabled":false,"info":""},{"id":"55a26b72.c8af14","type":"telegram bot","z":"5db46688.6c18e8","botname":"MWS Driver","usernames":"choopatroopa,tkhang1999,LiangBY,timothysoh,shchye,Han_Qing","chatids":"","baseapiurl":"","updatemode":"polling","pollinterval":"300","usesocks":false,"sockshost":"","socksport":"6667","socksusername":"anonymous","sockspassword":"","bothost":"","localbotport":"8443","publicbotport":"8443","privatekey":"","certificate":"","useselfsignedcertificate":false,"verboselogging":false},{"id":"d3dd1ede.552b3","type":"ui_tab","z":"5db46688.6c18e8","name":"User List","icon":"dashboard","order":2,"disabled":false,"hidden":false},{"id":"73a553d8.f09d8c","type":"ui_tab","z":"5db46688.6c18e8","name":"User Edit","icon":"message","order":3,"disabled":false,"hidden":false},{"id":"75b39bac.215974","type":"ui_tab","z":"5db46688.6c18e8","name":"Order List","icon":"message","order":1,"disabled":false,"hidden":false},{"id":"4dff0698.859cd8","type":"ui_tab","z":"5db46688.6c18e8","name":"Class Size","icon":"dashboard","order":4,"disabled":false,"hidden":false},{"id":"c882066.9086af8","type":"ui_group","z":"5db46688.6c18e8","name":"User List","tab":"252fd43d.2c59dc","order":1,"disp":false,"width":"16","collapse":false},{"id":"7a382c46.aa5f54","type":"ui_group","z":"5db46688.6c18e8","name":"User Maintenance","tab":"d3dd1ede.552b3","disp":true,"width":"6","collapse":false},{"id":"f083e70c.771ce8","type":"ui_group","z":"5db46688.6c18e8","name":"Order List","tab":"cfbbe1c3.5093f","disp":false,"width":"25","collapse":false},{"id":"4c4a238e.97111c","type":"ui_group","z":"5db46688.6c18e8","name":"Class Size","tab":"3d141ff4.1a1e9","order":1,"disp":true,"width":"13","collapse":false},{"id":"c393cc12.146a6","type":"telegram bot","z":"","botname":"hwabot","usernames":"choopatroopa,vinnnnnnnnnnn,yrworstnightmare,terencetankx,jaclynlam,t3dted,veralolol,ngohngoh,kohzx,smurfiq,jingyingx,beatsugarbutterflourNbakeat190c,njunxuan,kongyujie,iamgabrieltan,guangjie96,kynkong,ckarsen,victortangggg,Xiangqian,Kwtam,bryanzxc,Dionawx,ianlamze,qilingsoh,DarrenAndyTan,Wei_yuan,kaiyanghuan,jeraldgan,MingyiTeh","chatids":"-1001398059105","baseapiurl":"","updatemode":"polling","pollinterval":"300","usesocks":false,"sockshost":"","socksport":"6667","socksusername":"anonymous","sockspassword":"","bothost":"","localbotport":"8443","publicbotport":"8443","privatekey":"","certificate":"","useselfsignedcertificate":false,"verboselogging":false},{"id":"83f9d850.4dba58","type":"ui_group","z":"","name":"Order List","tab":"1cd3f8ba.56c5e7","disp":false,"width":"25","collapse":false},{"id":"1cd3f8ba.56c5e7","type":"ui_tab","z":"","name":"Order List","icon":"message","order":1,"disabled":false,"hidden":false},{"id":"d1cd04eb.c56bb8","type":"ui_base","theme":{"name":"theme-light","lightTheme":{"default":"#0094CE","baseColor":"#0094CE","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"darkTheme":{"default":"#097479","baseColor":"#097479","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":false},"customTheme":{"name":"Untitled Theme 1","default":"#4B7930","baseColor":"#4B7930","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"},"themeState":{"base-color":{"default":"#0094CE","value":"#0094CE","edited":false},"page-titlebar-backgroundColor":{"value":"#0094CE","edited":false},"page-backgroundColor":{"value":"#fafafa","edited":false},"page-sidebar-backgroundColor":{"value":"#ffffff","edited":false},"group-textColor":{"value":"#1bbfff","edited":false},"group-borderColor":{"value":"#ffffff","edited":false},"group-backgroundColor":{"value":"#ffffff","edited":false},"widget-textColor":{"value":"#111111","edited":false},"widget-backgroundColor":{"value":"#0094ce","edited":false},"widget-borderColor":{"value":"#ffffff","edited":false},"base-font":{"value":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"}},"angularTheme":{"primary":"indigo","accents":"blue","warn":"red","background":"grey"}},"site":{"name":"Node-RED Dashboard","hideToolbar":"false","allowSwipe":"false","lockMenu":"false","allowTempTheme":"true","dateFormat":"DD/MM/YYYY","sizes":{"sx":48,"sy":48,"gx":6,"gy":6,"cx":6,"cy":6,"px":0,"py":0}}},{"id":"dd1bfb6b.f422a8","type":"function","z":"5db46688.6c18e8","name":"Start","func":"if (msg.payload.chatId == 299473483){\n    \n\n\nmsg.payload.options = {parse_mode : \"Markdown\"};\nmsg.payload.content = \"Hi! Nice to meet you! Please type /book to make a bookign request and /view to view your current booking!ðŸ˜Š'\";\nreturn msg;\n\n\n}else{\n   msg.payload.options = {parse_mode : \"Markdown\"};\nmsg.payload.content = \"Hi! Nice to meet you! Please type /today to see today's schedule and /mark to complete requests!ðŸ˜Š'\";\nreturn msg;\n \n    \n    \n}","outputs":1,"noerr":0,"x":301,"y":194,"wires":[["28c52464.f78c3c"]]},{"id":"efe4cb23.635e88","type":"function","z":"5db46688.6c18e8","name":"Help","func":"\nmsg.payload.options = {parse_mode : \"Markdown\"};\nmsg.payload.content = \"*Below is your booking:*\\r\\n\\r\\n*Booking Date:* Friday 4 October 19\\r\\n*Booking Time:* 03:00PM\\r\\n *Pick up Address:* 70 Barker Rd, #05-01, Singapore 309936\\r\\n*Destination:* 25 Geylang East Ave 1, #01-05, Singapore 381125\\r\\n*Type:* Delivery Of Donation\\r\\n*Emergency Contact:* 98725123\";\nreturn msg;\n\n\n    \n","outputs":1,"noerr":0,"x":270,"y":280,"wires":[["41aca6a9.6f8a38"]]},{"id":"e49f4dac.dc29f","type":"function","z":"5db46688.6c18e8","name":"Buy","func":"msg.payload.options = {parse_mode : \"Markdown\"};\nmsg.payload.content = \"Hey! The budget for each headcount is $8 and below. (inclusive of delivery charges)\\r\\nPlease inform @SherylTqs before purchasing! Remember to get a receipt and send it to him to claim $$. ðŸ¤‘\\r\\n\\r\\n*HQ Special Food List*\\r\\n*Breakfast and Tea:* ðŸ˜‹\\r\\nMacdonald (ARC): Corn, Red Rice Porridge (Vegan) \\r\\nFruit Store (ARC): Fruits (Vegan) \\r\\n\\r\\n*Lunch and Dinner:* ðŸ˜‹\\r\\nQQRice (ARC): Vegetarian Bento Set, Sesame mushroom rice (Vegan) \\r\\nBurger King (ARC): Veggie Burger (Vegetarian)\\r\\n\\r\\n*SMU Special Food List*\\r\\n*All Meals: ðŸŒ¿*\\r\\nSubway: Veggie Delite (Vegan) \\r\\n\\r\\n*Breakfast,Lunch and Tea: ðŸŒ¿*\\r\\nMr Bean: Soy Porridge (Vegetarian Tofu and Peanuts) (Vegetarian)\\r\\n\\r\\n*Definitions:*\\r\\nStrict vegetarian: No meat, garlic, shoots and onion\\r\\nVegetarian: No meat but can eat eggs\\r\\nVegan: No Meat, dairy and egg\";\n\nreturn msg;\n\n","outputs":1,"noerr":0,"x":301,"y":134,"wires":[["d041cb72.80b868"]]},{"id":"be4dad6a.ae0f1","type":"telegram command","z":"5db46688.6c18e8","name":"","command":"/start","bot":"55a26b72.c8af14","strict":false,"x":161,"y":194,"wires":[["dd1bfb6b.f422a8"],[]]},{"id":"27e412fb.45dade","type":"telegram command","z":"5db46688.6c18e8","name":"","command":"/view","bot":"55a26b72.c8af14","strict":false,"x":90,"y":280,"wires":[["efe4cb23.635e88"],[]]},{"id":"3d311349.f48eec","type":"telegram command","z":"5db46688.6c18e8","name":"","command":"/buy","bot":"55a26b72.c8af14","strict":false,"x":123,"y":134,"wires":[["e49f4dac.dc29f"],[]]},{"id":"28c52464.f78c3c","type":"telegram sender","z":"5db46688.6c18e8","name":"","bot":"55a26b72.c8af14","x":451,"y":194,"wires":[[]]},{"id":"41aca6a9.6f8a38","type":"telegram sender","z":"5db46688.6c18e8","name":"","bot":"55a26b72.c8af14","x":451,"y":254,"wires":[[]]},{"id":"d041cb72.80b868","type":"telegram sender","z":"5db46688.6c18e8","name":"","bot":"55a26b72.c8af14","x":451,"y":134,"wires":[[]]},{"id":"946895aa.ff1c38","type":"function","z":"5db46688.6c18e8","name":"SET TO OWN ID","func":"msg.payload.type = \"message\"\nmsg.payload.chatId = 299473483\nmsg.payload.options = {parse_mode : \"Markdown\"};\nmsg.payload.content = '*Error encountered!\\r\\n' + msg.error.message + '\\r\\nFrom ' + msg.error.source.name + '*'\n\nreturn msg;","outputs":1,"noerr":0,"x":890,"y":128,"wires":[["f42d0bd5.ff2cf8"]]},{"id":"3029a06b.12ed2","type":"debug","z":"5db46688.6c18e8","name":"Error Log","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":830,"y":268,"wires":[]},{"id":"5f07a1f7.2e849","type":"comment","z":"5db46688.6c18e8","name":"Catch All Error","info":"","x":720,"y":108,"wires":[]},{"id":"41d3085e.b8a978","type":"catch","z":"5db46688.6c18e8","name":"","scope":null,"uncaught":false,"x":690,"y":148,"wires":[["3029a06b.12ed2","946895aa.ff1c38"]]},{"id":"f42d0bd5.ff2cf8","type":"telegram sender","z":"5db46688.6c18e8","name":"Send to choopa","bot":"55a26b72.c8af14","x":1070,"y":188,"wires":[[]]},{"id":"889715cb.7ee7e8","type":"function","z":"5db46688.6c18e8","name":"No. of TA","func":"//context.global.keyboard2 = {pending:true};\n\nvar opts = {\n    reply_to_message_id: msg.payload.messageId,\n    reply_markup: JSON.stringify({\n        \"inline_keyboard\": [[\n            {\n                \"text\":\"Friday 4 Oct\",\n                \"callback_data\": \"04/10/19\"\n            \n            }],[\n            {\n                \"text\":\"Saturday 5 Oct\",\n                \"callback_data\": \"05/10/19\"\n            \n            }],[\n            {\n                \"text\":\"Sunday 6 Oct\",\n                \"callback_data\": \"06/10/19\"\n            }],\n            [{\n                \"text\":\"Monday 7 Oct\",\n                \"callback_data\": \"07/10/19\"\n                \n            }],\n            [{\n                \"text\":\"Tuesday 8 Oct\",\n                \"callback_data\": \"08/10/19\"\n            } ]           \n            \n            ]\n        \n        \n    })\n    \n}\nmsg.payload.content = 'Choose your date?';\nmsg.payload.options = opts;\nreturn [msg];\n ","outputs":1,"noerr":0,"x":260,"y":460,"wires":[["d9e54fa4.38039"]]},{"id":"6e51ad82.c74444","type":"telegram command","z":"5db46688.6c18e8","name":"","command":"/book","bot":"55a26b72.c8af14","strict":false,"x":50,"y":460,"wires":[["889715cb.7ee7e8"],["af1d5880.15ba08","b265a036.c14b","a890af7a.0ee54"]]},{"id":"d9e54fa4.38039","type":"telegram sender","z":"5db46688.6c18e8","name":"","bot":"55a26b72.c8af14","x":500,"y":500,"wires":[[]]},{"id":"a33706fe.f89498","type":"debug","z":"5db46688.6c18e8","name":"Makeup Usage Log","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":990,"y":680,"wires":[]},{"id":"59fee541.83fc7c","type":"function","z":"5db46688.6c18e8","name":"send success msg to CTA and TargetCTA","func":"var moment = global.get('moment')\n\nif (msg.payload['status'] == \"success\"){\n    var output = []\n        var opts = {\n        chat_id : msg.originalMessage.from.id,\n        message_id : msg.originalMessage.message.message_id,        \n        reply_markup: JSON.stringify({\n            \"inline_keyboard\": []\n        })\n    }\n    studentnameclass = msg.originalMessage.message.text\n    msg.payload.chatId = msg.originalMessage.from.id\n    msg.payload.content = \"Your makeup has been confirmed! ðŸ€„\\r\\nSent \"+ studentnameclass.slice(30,-1) + '\\r\\nTimestamp: ' + moment().add(8, 'hour').format('D MMM YY, h:mma').toString()\n    msg.payload.type = 'editMessageText'\n    msg.payload.options = opts;\n    var cloneOfA = JSON.parse(JSON.stringify(msg)); //Idk why need parse to JSON, but oh well!\n    output.push(cloneOfA)\n    //Alert target class CTA\n    taname = studentnameclass.slice(studentnameclass.indexOf(\"(\")+1,studentnameclass.indexOf(\")\"))\n    var telegramusers = global.get(\"telegramusers\");\n    for (var i=0;i<telegramusers.length;i++) {\n        var chatidd = telegramusers[i].chatId.toString()\n        if (taname===telegramusers[i].name && !chatidd.includes(\"555555\")) {  //Check if Name aligns with the telegramuser dict, cannot have duplicate names*\n            tachatid = parseInt(telegramusers[i].chatId)\n        }\n        if (parseInt(msg.originalMessage.from.id)===parseInt(telegramusers[i].chatId)) {\n            originaltaname = telegramusers[i].name\n        }        \n    }\n    var msg;\n    msg.payload.chatId = tachatid\n    msg.payload.content = \"*Please take note!* \" + originaltaname + \" sent \"+ studentnameclass.slice(30,studentnameclass.indexOf(\"(\")) + '\\r\\nTimestamp: ' + moment().add(8, 'hour').format('D MMM YY, h:mma').toString()\n    msg.payload.type = 'message'\n    msg.payload.options = {parse_mode: \"Markdown\"};\n    \n    var cloneOfA = JSON.parse(JSON.stringify(msg));\n    output.push(cloneOfA)\n    return [output];\n    \n}else{\n            var opts = {\n        chat_id : msg.originalMessage.from.id,\n        message_id : msg.originalMessage.message.message_id,        \n        reply_markup: JSON.stringify({\n            \"inline_keyboard\": []\n        })\n    }\n    msg.payload.content = \"Oh No! It failed! Please contact @choopatroopa! ðŸ¤’\"\n    msg.payload.type = 'editMessageText'\n    msg.payload.options = opts;\n    msg.payload.chatId = msg.originalMessage.from.id\n    \n    return [msg];\n}\n\n","outputs":2,"noerr":0,"x":960,"y":540,"wires":[["9179eb0b.b17c28","abfa60e2.f6407","bf22faa2.69d0e8"],["9179eb0b.b17c28"]]},{"id":"65d7a93e.d69838","type":"telegram sender","z":"5db46688.6c18e8","name":"","bot":"55a26b72.c8af14","x":740,"y":640,"wires":[[]]},{"id":"d2cf31dd.f9f82","type":"http request","z":"5db46688.6c18e8","name":"","method":"POST","ret":"obj","paytoqs":false,"url":"http://13.229.184.196:8081/user/requests","tls":"","persist":false,"proxy":"","authType":"","x":850,"y":840,"wires":[["a33706fe.f89498"]]},{"id":"4d11e7f4.c53768","type":"function","z":"5db46688.6c18e8","name":"Class Select","func":"//context.global.keyboard = {pending : true };\nmsg.payload.type = 'editMessageText'\n// var classlist = global.get(\"classlist\");\n\n\nvar classlist = [\"Morning\",\"Noon\",\"Afternoon\"]\nclasses = []\nfor (var k = 0; k <= classlist.length; k++) {\n    if(k==(classlist.length)){\n        classes.push([{\"text\":'Cancel', \"callback_data\":\"Cancel\"}])\n    }else{\n        var callbackdata = \"2-\" + classlist[k]\n        classes.push([{\"text\":classlist[k], \"callback_data\":callbackdata}])\n    }\n    \n}\n\nvar opts = {\n    chat_id : msg.payload.chatId,\n    message_id : msg.payload.messageId,\n    reply_markup: JSON.stringify({\n        \n        \"inline_keyboard\": classes\n    })\n};\n\nmsg.payload.content = 'Please enter preferred timing ðŸ¤—';\nmsg.payload.options = opts;\n\nreturn [msg];\n\n\n// context.global.keyboard = {pending : true };\n// msg.payload.type = \"message\";\n// var classlist = global.get(\"classlist\");\n// classes = [['Cancel']]\n// for (var k = 0; k <= classlist.length; k++) {\n//     if(k==(classlist.length)){\n//         classes.push(['Cancel'])\n//     }else{\n//         classes.push([classlist[k]])\n//     }\n    \n// }\n\n// var opts = {\n//     reply_to_msg_id: msg.payload.messageId,\n//     reply_markup: JSON.stringify({\n//         keyboard:  classes,\n            \n//     'resize_keyboard' : true,\n//     'one_time_keyboard' : true\n//     })\n// };","outputs":1,"noerr":0,"x":530,"y":640,"wires":[["65d7a93e.d69838"]]},{"id":"3057975f.e1c578","type":"function","z":"5db46688.6c18e8","name":"Sticker 2","func":"// var stickerpack = global.get(\"stickerpack\");\nvar stickerpack = ['CAADAgADCAADwDZPE29sJgveGptpFgQ','CAADAgADFAADr8ZRGgu7XTT4sVnxFgQ']\nvar rand = stickerpack[Math.floor(Math.random() * stickerpack.length)];\n\nmsg.payload.content = rand;\nmsg.payload.type = 'sticker';\nreturn msg;","outputs":1,"noerr":0,"x":740,"y":1040,"wires":[["9e0217c6.eab168"]]},{"id":"9e0217c6.eab168","type":"telegram sender","z":"5db46688.6c18e8","name":"Send response","bot":"55a26b72.c8af14","x":900,"y":980,"wires":[[]]},{"id":"2246a719.049a68","type":"function","z":"5db46688.6c18e8","name":"Register User","func":"var message = msg.payload.content;\nvar opts = {\nchat_id : msg.payload.chatId,\nmessage_id : msg.payload.messageId,        \nreply_markup: JSON.stringify({\n    \"inline_keyboard\": []\n})\n}\nif (message.split(\"-\")[0] == 'selectedclass'){\n       // Get the user settings stored in global\n    var telegramusers = global.get(\"telegramusers\");\n    var tacount = global.get(\"tacount\");\n    var cohort = global.get(\"cohortnow\")\n    // Create the new user object and maintain it based on the data received\n    var classId = message.split(\"-\")[1]\n    var newuser = {\n        chatId: msg.payload.chatId,\n        name: msg.originalMessage.from.first_name,\n        accesslevel: 0,\n        loglevel: 10,\n        logmute: 0,\n        blocked: true,\n        classid: classId,\n        taincount: parseInt(tacount),\n        cohort: parseInt(cohort)\n    };        \n\n    var creationmsg = \"Thank you for registering, \"+msg.originalMessage.from.first_name+\"\\r\\nPlease confirm that you are registered to \"+classId+\" with \"+tacount+\" TA/Instructor!\"+global.get(\"choopamsg\")\n            \n    if (telegramusers===undefined) {\n        // Create an empty array if it does not exist yet\n        telegramusers = [];\n        telegramusers.push(newuser);\n        global.set(\"telegramusers\",telegramusers);\n        msg.payload.content = creationmsg\n        msg.payload.type = 'editMessageText'\n        msg.payload.options = opts;\n        return [msg,null,null];\n    } else {\n        // Check if this user is already created\n        var duplicate = false;\n        for (var i=0;i<telegramusers.length;i++) {\n            if (msg.payload.chatId===telegramusers[i].chatId) {\n                duplicate = true;\n                break;\n            }\n        }\n        if (duplicate) {\n            // This user is already registered, return in the second port\n            msg.payload.content = \"You are already registered! Don't fool me! ðŸ˜¡\"\n            msg.payload.type = 'editMessageText'\n            msg.payload.options = opts;\n            return [null,msg,null];\n        } else {\n            // This is a new user, save and return in the first port\n            telegramusers.push(newuser);\n            global.set(\"telegramusers\",telegramusers);\n            msg.payload.content = creationmsg\n            msg.payload.type = 'editMessageText'\n            msg.payload.options = opts;\n            return [msg,null,null];\n            \n        }\n    }\n    \n    }else if(message=='Cancel'){\n\n        msg.payload.content = \"Okay..byebye..ðŸ˜­\"\n        msg.payload.type = 'editMessageText'\n        msg.payload.options = opts;\n        return [null,null,msg];\n        \n    }","outputs":3,"noerr":0,"x":320,"y":1000,"wires":[["9e0217c6.eab168"],["9e0217c6.eab168"],["9e0217c6.eab168"]]},{"id":"99c46e4b.673d","type":"function","z":"5db46688.6c18e8","name":"Set TA count global","func":"//var show_alert = true;\nvar message = msg.payload.content;\nif ([\"04/10/19\",\"05/10/19\",\"06/10/19\",\"07/10/19\",\"08/10/19\"].includes(message)){\n    var tacount = message;\n    global.set(\"tacount\",tacount);\n    //msg.payload.options = show_alert;\n    return [msg];\n}\n\n\n\n","outputs":1,"noerr":0,"x":330,"y":620,"wires":[["4d11e7f4.c53768"]]},{"id":"9f67844a.2aba68","type":"function","z":"5db46688.6c18e8","name":"gotit","func":"var message = msg.payload.content;\nmsg.payload = {\n    \"request_date\": global.get(\"tacount\"),\n    \"request_type\" : global.get(\"3-\"),\n    \"preferred_timeslot\" : global.get(\"2-\"),\n    \"location_from\" : global.get(\"4-\"),\n    \"location_to\" : global.get(\"6-\"),\n    \"telegram_chat_id\" : msg.payload.chatId\n      }\n      \n      \n    // msg.headers = {\n    // \"Content-Type\": \"application/json\",\n    // \"X-API-Key\": \"\"\n    // }\n    \n    msg.headers = {\n    \"Content-Type\": \"application/json\"\n    }\n    return msg;\n\n  ","outputs":1,"noerr":0,"x":650,"y":900,"wires":[["d2cf31dd.f9f82","a33706fe.f89498"]]},{"id":"45cc9487.992f4c","type":"telegram event","z":"5db46688.6c18e8","name":"","bot":"55a26b72.c8af14","event":"callback_query","autoanswer":false,"x":100,"y":400,"wires":[["99c46e4b.673d","66a53272.2d57ec","2246a719.049a68","af1d5880.15ba08","b265a036.c14b","4be1b25f.687d1c","a890af7a.0ee54","49a8c4d5.ffcf7c"]]},{"id":"abfa60e2.f6407","type":"debug","z":"5db46688.6c18e8","name":"Tester 2","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":1200,"y":440,"wires":[]},{"id":"bf22faa2.69d0e8","type":"file","z":"5db46688.6c18e8","name":"Write to Makeuplog.json","filename":"./data/makeuplog.json","appendNewline":true,"createDir":false,"overwriteFile":"false","x":1290,"y":520,"wires":[[]]},{"id":"9179eb0b.b17c28","type":"telegram sender","z":"5db46688.6c18e8","name":"","bot":"55a26b72.c8af14","x":1349,"y":686,"wires":[[]]},{"id":"1db42706.eaa8c9","type":"function","z":"5db46688.6c18e8","name":"Class Select","func":"//context.global.keyboard = {pending : true };\nmsg.payload.type = 'editMessageText'\n// var classlist = global.get(\"classlist\");\n\n\nvar classlist = [\"Delivery of Donation\",\"Staff Transport\",\"Despatch Document\",\"Others\"]\nclasses = []\nfor (var k = 0; k <= classlist.length; k++) {\n    if(k==(classlist.length)){\n        classes.push([{\"text\":'Cancel', \"callback_data\":\"Cancel\"}])\n    }else{\n        var callbackdata = \"3-\" + classlist[k]\n        classes.push([{\"text\":classlist[k], \"callback_data\":callbackdata}])\n    }\n    \n}\n\nvar opts = {\n    chat_id : msg.payload.chatId,\n    message_id : msg.payload.messageId,\n    reply_markup: JSON.stringify({\n        \n        \"inline_keyboard\": classes\n    })\n};\n\nmsg.payload.content = 'Request Type ðŸ¤—';\nmsg.payload.options = opts;\n\nreturn [msg];\n\n\n// context.global.keyboard = {pending : true };\n// msg.payload.type = \"message\";\n// var classlist = global.get(\"classlist\");\n// classes = [['Cancel']]\n// for (var k = 0; k <= classlist.length; k++) {\n//     if(k==(classlist.length)){\n//         classes.push(['Cancel'])\n//     }else{\n//         classes.push([classlist[k]])\n//     }\n    \n// }\n\n// var opts = {\n//     reply_to_msg_id: msg.payload.messageId,\n//     reply_markup: JSON.stringify({\n//         keyboard:  classes,\n            \n//     'resize_keyboard' : true,\n//     'one_time_keyboard' : true\n//     })\n// };","outputs":1,"noerr":0,"x":450,"y":680,"wires":[["65d7a93e.d69838"]]},{"id":"66a53272.2d57ec","type":"function","z":"5db46688.6c18e8","name":"set 3rd","func":"//var show_alert = true;\nvar message = msg.payload.content;\nif (message.includes(\"2-\")){\n    var tacount = message.split(\"-\")[1];\n    global.set(\"2-\",tacount);\n    //msg.payload.options = show_alert;\n    return [msg];\n}\n\n\n\n","outputs":1,"noerr":0,"x":270,"y":680,"wires":[["1db42706.eaa8c9"]]},{"id":"af1d5880.15ba08","type":"function","z":"5db46688.6c18e8","name":"set 4th","func":"\nvar message = msg.payload.content;\nvar text = message.slice(message.length -3)\nif (text.includes(\"936\")){\n    global.set(\"5-\",message);\n    //msg.payload.options = show_alert;\n    return [msg];\n}\n\n\n\n","outputs":1,"noerr":0,"x":290,"y":800,"wires":[["ca86aee6.4913d","b265a036.c14b"]]},{"id":"2328a5e1.36dada","type":"function","z":"5db46688.6c18e8","name":"Class Select","func":"msg.payload.type = 'message'\nmsg.payload.options = {parse_mode : \"Markdown\"};\nmsg.payload.content = \"*Key in your starting location!*\\r\\nExample: Blk 500 Ang Mo Kio Singapore 532500:\"\n\nreturn msg;","outputs":1,"noerr":0,"x":430,"y":760,"wires":[["65d7a93e.d69838"]]},{"id":"b265a036.c14b","type":"debug","z":"5db46688.6c18e8","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":270,"y":1080,"wires":[]},{"id":"4be1b25f.687d1c","type":"function","z":"5db46688.6c18e8","name":"set 3rd","func":"//var show_alert = true;\nvar message = msg.payload.content;\nif (message.includes(\"3-\")){\n    var tacount = message.split(\"-\")[1];\n    global.set(\"3-\",tacount);\n    //msg.payload.options = show_alert;\n    return [msg];\n}\n\n\n\n","outputs":1,"noerr":0,"x":270,"y":720,"wires":[["2328a5e1.36dada"]]},{"id":"ca86aee6.4913d","type":"function","z":"5db46688.6c18e8","name":"Class Select","func":"msg.payload.type = 'message'\nmsg.payload.options = {parse_mode : \"Markdown\"};\nmsg.payload.content = \"*Key in your destination!*\\r\\nExample: Blk 500 Ang Mo Kio Singapore 532500:\"\n\nreturn msg;","outputs":1,"noerr":0,"x":470,"y":800,"wires":[["65d7a93e.d69838"]]},{"id":"a8e06fb.fed589","type":"function","z":"5db46688.6c18e8","name":"Class Select","func":"msg.payload.type = 'message'\nmsg.payload.options = {parse_mode : \"Markdown\"};\nmsg.payload.content = \"*Your booking has been confirmed!* Please type /view to view your booking!\"\n\nreturn msg;","outputs":1,"noerr":0,"x":670,"y":820,"wires":[["65d7a93e.d69838"]]},{"id":"a890af7a.0ee54","type":"function","z":"5db46688.6c18e8","name":"set 4th","func":"\nvar message = msg.payload.content;\nvar text = message.slice(message.length -3)\nif (text.includes(\"125\")){\n    global.set(\"5-\",message);\n    //msg.payload.options = show_alert;\n    return [msg];\n}\n\n\n\n","outputs":1,"noerr":0,"x":350,"y":900,"wires":[["a8e06fb.fed589"]]},{"id":"47acf574.df389c","type":"telegram command","z":"5db46688.6c18e8","name":"","command":"/mark","bot":"55a26b72.c8af14","strict":false,"x":170,"y":340,"wires":[["1d95cd19.39dcb3"],[]]},{"id":"1299b808.4e52a8","type":"inject","z":"5db46688.6c18e8","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":true,"onceDelay":0.1,"x":190,"y":60,"wires":[["ddcd8ebd.a22d6"]]},{"id":"ddcd8ebd.a22d6","type":"function","z":"5db46688.6c18e8","name":"","func":"theList = [\"Delivery of Donation 09:00AM\",\"Staff Transport 11:00AM\",\"Delivery of Donation 03:00PM\"]\nglobal.set(\"theList\",theList)\nreturn msg;","outputs":1,"noerr":0,"x":360,"y":60,"wires":[[]]},{"id":"92fd0c65.10461","type":"debug","z":"5db46688.6c18e8","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":750,"y":340,"wires":[]},{"id":"1d95cd19.39dcb3","type":"function","z":"5db46688.6c18e8","name":"Class Select","func":"//context.global.keyboard = {pending : true };\n// var classlist = global.get(\"classlist\");\n\n\nvar classlist =global.get(\"theList\")\n\nclasses = []\nfor (var k = 0; k <= classlist.length; k++) {\n    if(k==(classlist.length)){\n        classes.push([{\"text\":'Cancel', \"callback_data\":\"Cancel\"}])\n    }else{\n        var callbackdata = \"r-\" + classlist[k]\n        classes.push([{\"text\":classlist[k], \"callback_data\":callbackdata}])\n    }\n    \n}\n\nvar opts = {\n    chat_id : msg.payload.chatId,\n    message_id : msg.payload.messageId,\n        reply_to_message_id: msg.payload.messageId,\n\n    reply_markup: JSON.stringify({\n        \n        \"inline_keyboard\": classes\n    })\n};\n\nmsg.payload.content = 'Click on the timeslot to complete the request! ðŸ¤—';\nmsg.payload.options = opts;\n\nreturn [msg];\n\n\n// context.global.keyboard = {pending : true };\n// msg.payload.type = \"message\";\n// var classlist = global.get(\"classlist\");\n// classes = [['Cancel']]\n// for (var k = 0; k <= classlist.length; k++) {\n//     if(k==(classlist.length)){\n//         classes.push(['Cancel'])\n//     }else{\n//         classes.push([classlist[k]])\n//     }\n    \n// }\n\n// var opts = {\n//     reply_to_msg_id: msg.payload.messageId,\n//     reply_markup: JSON.stringify({\n//         keyboard:  classes,\n            \n//     'resize_keyboard' : true,\n//     'one_time_keyboard' : true\n//     })\n// };","outputs":1,"noerr":0,"x":330,"y":340,"wires":[["41aca6a9.6f8a38"]]},{"id":"49a8c4d5.ffcf7c","type":"function","z":"5db46688.6c18e8","name":"set 3rd","func":"//var show_alert = true;\nvar message = msg.payload.content;\n\nif (message.split(\"-\")[0] == 'r'){\n    global.set(\"r-\",message.split(\"-\")[1]);\n    var test = global.get(\"theList\")\n    const filteredItems = test.filter(item => item !== message.split(\"-\")[1])\n    global.set(\"theList\",filteredItems)\n    //msg.payload.options = show_alert;\n    return [msg];\n}\n\n\n\n","outputs":1,"noerr":0,"x":290,"y":400,"wires":[["8f081f35.99edb"]]},{"id":"8f081f35.99edb","type":"function","z":"5db46688.6c18e8","name":"Class Select","func":"msg.payload.type = 'message'\nmsg.payload.options = {parse_mode : \"Markdown\"};\nmsg.payload.content = \"Timeslot has been marked as completed!\"\n\nreturn msg;","outputs":1,"noerr":0,"x":510,"y":400,"wires":[["41aca6a9.6f8a38"]]},{"id":"bee4abe7.3cf998","type":"function","z":"5db46688.6c18e8","name":"Sticker 2","func":"// var stickerpack = global.get(\"stickerpack\");\nvar stickerpack = ['CAADAgADCAADwDZPE29sJgveGptpFgQ','CAADAgADFAADr8ZRGgu7XTT4sVnxFgQ']\nvar rand = stickerpack[Math.floor(Math.random() * stickerpack.length)];\n\nmsg.payload.content = rand;\nmsg.payload.type = 'sticker';\nreturn msg;","outputs":1,"noerr":0,"x":580,"y":340,"wires":[["41aca6a9.6f8a38"]]},{"id":"d0c2bb9.33f8548","type":"function","z":"5db46688.6c18e8","name":"driver","func":" msg.payload.options = {parse_mode : \"Markdown\"};\nmsg.payload.content = \"*DELIVERY SCHEDULE 04/10/2019*\\r\\n\\r\\n1. 9:00 AM | Delivery Of Donation | 25 Geylang East Ave 1, #01-05, S381125 â€” 70 Barker Rd, #05-01, S309936 | 92130612\\r\\n\\r\\n2. 11:00 AM | Staff Transport | 34 Amber Rd, #02-02, S311036 â€” 20 Geylang East Ave 1, #01-05 S381125 | 84738339\\r\\n\\r\\n3. 03:00 PM | Delivery Of Donation | 70 Barker Rd, #05-01, S309936 â€” 25 Geylang East Ave 3, #01-05 S099325 | 92134489\" \nreturn msg;  ","outputs":1,"noerr":0,"x":850,"y":440,"wires":[["41aca6a9.6f8a38"]]},{"id":"deb4abf0.65bee8","type":"telegram command","z":"5db46688.6c18e8","name":"","command":"/today","bot":"55a26b72.c8af14","strict":false,"x":630,"y":420,"wires":[["d0c2bb9.33f8548"],[]]},{"id":"be51e549.6ba868","type":"inject","z":"5db46688.6c18e8","name":"","topic":"scheduler","payload":"{\"chatId\":123,\"messageId\":563,\"type\":\"message\",\"content\":\"\"}","payloadType":"json","repeat":"3600","crontab":"","once":false,"onceDelay":0.1,"x":610,"y":560,"wires":[["4df3b103.12edc"]]},{"id":"4df3b103.12edc","type":"function","z":"5db46688.6c18e8","name":"sim driver","func":"msg.payload.chatId = \"20710511\"\nmsg.payload.options = {parse_mode : \"Markdown\"};\nmsg.payload.content = \"*DELIVERY SCHEDULE 04/10/2019*\\r\\n\\r\\n1. 9:00 AM | Delivery Of Donation | 25 Geylang East Ave 1, #01-05, S381125 â€” 70 Barker Rd, #05-01, S309936 | 92130612\\r\\n\\r\\n2. 11:00 AM | Staff Transport | 34 Amber Rd, #02-02, S311036 â€” 20 Geylang East Ave 1, #01-05 S381125 | 84738339\\r\\n\\r\\n3. 03:00 PM | Delivery Of Donation | 70 Barker Rd, #05-01, S309936 â€” 25 Geylang East Ave 3, #01-05 S099325 | 92134489\" \nreturn msg;  ","outputs":1,"noerr":0,"x":840,"y":500,"wires":[["41aca6a9.6f8a38"]]},{"id":"87663c2.13fe8c","type":"http request","z":"5db46688.6c18e8","name":"","method":"GET","ret":"obj","paytoqs":false,"url":"http://13.229.184.196:8081/driver/requests","tls":"","persist":false,"proxy":"","authType":"","x":1110,"y":820,"wires":[["d744ae4a.d0938","7b6e4ce5.0205b4"]]},{"id":"d744ae4a.d0938","type":"debug","z":"5db46688.6c18e8","name":"GET DRIVER LIST","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":1310,"y":800,"wires":[]},{"id":"4428f4d6.22db6c","type":"telegram command","z":"5db46688.6c18e8","name":"","command":"/today2","bot":"55a26b72.c8af14","strict":false,"x":1190,"y":880,"wires":[["720438cb.b72c78"],[]]},{"id":"720438cb.b72c78","type":"function","z":"5db46688.6c18e8","name":"driver","func":"var hey = global.get(\"driverlist\")\nvar delivery = hey.payload.requests\nmsg.payload.options = {parse_mode : \"Markdown\"};\nvar content = \"\"\n//msg.payload.content = \"*DELIVERY SCHEDULE 05/10/2019*\\r\\n\\r\\n1. 9:00 AM | Delivery Of Donation | 25 Geylang East Ave 1, #01-05, S381125 â€” 70 Barker Rd, #05-01, S309936 | 92130612\\r\\n\\r\\n2. 11:00 AM | Staff Transport | 34 Amber Rd, #02-02, S311036 â€” 20 Geylang East Ave 1, #01-05 S381125 | 84738339\\r\\n\\r\\n3. 03:00 PM | Delivery Of Donation | 70 Barker Rd, #05-01, S309936 â€” 25 Geylang East Ave 3, #01-05 S099325 | 92134489\" \n\n\nfor (var k = 0; k <= delivery.length; k++) {\n    var ve = delivery[k]\n    if (ve[\"request_date\"] == \"04/10/2019\"){\n        \n    \n    content+= \"*DELIVERY SCHEDULE 04/10/2019*\\r\\n\\r\\n\"+k+1+\". \"+ ve[\"request_timing\"] + \" | \" + ve[\"request_type\"] + ' | ' + ve['location_from'] + ' | ' + ve['location_to'] + \" | \" + ve[\"emergency_contact_no\"] + \"\\r\\n\"\n}\n}\n\n\nmsg.payload.content = content\nreturn msg;  ","outputs":1,"noerr":0,"x":1330,"y":880,"wires":[["92c54f4a.406b6"]]},{"id":"92c54f4a.406b6","type":"telegram sender","z":"5db46688.6c18e8","name":"","bot":"55a26b72.c8af14","x":1500,"y":880,"wires":[[]]},{"id":"7b6e4ce5.0205b4","type":"function","z":"5db46688.6c18e8","name":"","func":"global.set(\"driverlist\",msg)\nreturn msg;","outputs":1,"noerr":0,"x":1280,"y":740,"wires":[[]]},{"id":"bc7c3f6a.24f52","type":"inject","z":"5db46688.6c18e8","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":true,"onceDelay":0.1,"x":970,"y":920,"wires":[["87663c2.13fe8c"]]}]